(define (problem test_flixeder)
	(:domain mrod)
	(:objects
		rob1 rob2 - actuator
		asA - actuatorSet
		rob1JntPosPer rob1JntVelPer rob1ForcePer rob2JntPosPer rob2JntVelPer rob2ForcePer cellCamera - perceptor
		psA - perceptorSet
		objA - do
		rob1MesJntPosVar rob1ContJntPosVar rob1MesJntVelVar rob1ContJntVelVar rob1MesToolPosVar rob1ContToolPosVar rob1MesToolVelVar rob1ContToolVelVar rob1MesForceVar rob1ContHybridFPVar
		rob2MesJntPosVar rob2ContJntPosVar rob2MesJntVelVar rob2ContJntVelVar rob2MesToolPosVar rob2ContToolPosVar rob2MesToolVelVar rob2ContToolVelVar rob2MesForceVar rob2ContHybridFPVar
		objAMesStressVar objAMesShapeVar objAMesPositionVar objAMesPointCloudVar - variable
		grip1 grip2 - tool
	)
	(:init
		;actuation
		(hasTypeA rob1 spatialRobot)
		(hasTypeA rob2 spatialRobot)
		(hasMountedP rob1 rob1JntPosPer)
		(hasMountedP rob1 rob1JntVelPer)
		(hasMountedP rob1 rob1ForcePer)
		(hasMountedP rob2 rob2JntPosPer)
		(hasMountedP rob2 rob2JntVelPer)
		(hasMountedP rob2 rob2ForcePer)
		(canMountT rob1 simpleGripper)
		(canMountT rob2 simpleGripper)
		(canControlV rob1 jointPosition)
		(canControlV rob1 toolHybridFP)
		(canControlV rob2 jointPosition)
		(canControlV rob2 toolHybridFP)
		(canHandleO rob1 linear)
		(canHandleO rob2 linear)
		(canHandleOT simpleGripper objA)
		;perception
		(hasTypeP rob1JntPosPer jointPositionSensor)
		(hasTypeP rob1JntVelPer jointVelocitySensor)
		(hasTypeP rob1ForcePer toolForceSensor)
		(hasTypeP rob2JntPosPer jointPositionSensor)
		(hasTypeP rob2JntVelPer jointVelocitySensor)
		(hasTypeP rob2ForcePer toolForceSensor)
		(hasTypeP cellCamera cell3DVisionSensor)
		(canPercieveO cellCamera objA)
		(canMeasureV rob1JntPosPer jointPosition)
		(canMeasureV rob1JntVelPer jointVelocity)
		(canMeasureV rob1ForcePer toolForce)
		(canMeasureV rob2JntPosPer jointPosition)
		(canMeasureV rob2JntVelPer jointVelocity)
		(canMeasureV rob2ForcePer toolForce)
		(canMeasureV cellCamera objectPointCloud)
		;(canMeasureV cellCamera objectPosition)
		;(canMeasureV cellCamera objectShape)
		;object
		(hasDimO objA linear)
		(hasBehavO objA isometric)
		(hasStateValue objA statePosition initialValue)
		(hasStateValue objA stateShape initialValue)
		(hasStateValue objA stateStress initialValue)
		;variables for robot 1
		(hasTypeV rob1MesJntPosVar jointPosition)
		(hasTypeV rob1MesJntVelVar jointVelocity)
		(hasTypeV rob1MesToolPosVar toolPosition)
		(hasTypeV rob1MesToolVelVar toolVelocity)
		(hasTypeV rob1ContJntPosVar jointPosition)
		(hasTypeV rob1ContJntVelVar jointVelocity)
		(hasTypeV rob1ContToolPosVar toolPosition)
		(hasTypeV rob1ContToolVelVar toolVelocity)
		(hasTypeV rob1MesForceVar toolForce)
		(hasTypeV rob1ContHybridFPVar toolHybridFP)
		(hasRoleV rob1MesJntPosVar measured)
		(hasRoleV rob1MesJntVelVar measured)
		(hasRoleV rob1MesToolPosVar measured)
		(hasRoleV rob1MesToolVelVar measured)
		(hasRoleV rob1ContJntPosVar control)
		(hasRoleV rob1ContJntVelVar control)
		(hasRoleV rob1ContToolPosVar control)
		(hasRoleV rob1ContToolVelVar control)
		(hasRoleV rob1MesForceVar measured)
		(hasRoleV rob1ContHybridFPVar control)
		;variables for robot 2
		(hasTypeV rob2MesJntPosVar jointPosition)
		(hasTypeV rob2MesJntVelVar jointVelocity)
		(hasTypeV rob2MesToolPosVar toolPosition)
		(hasTypeV rob2MesToolVelVar toolVelocity)
		(hasTypeV rob2ContJntPosVar jointPosition)
		(hasTypeV rob2ContJntVelVar jointVelocity)
		(hasTypeV rob2ContToolPosVar toolPosition)
		(hasTypeV rob2ContToolVelVar toolVelocity)
		(hasTypeV rob2MesForceVar toolForce)
		(hasTypeV rob2ContHybridFPVar toolHybridFP)
		(hasRoleV rob2MesJntPosVar measured)
		(hasRoleV rob2MesJntVelVar measured)
		(hasRoleV rob2MesToolPosVar measured)
		(hasRoleV rob2MesToolVelVar measured)
		(hasRoleV rob2ContJntPosVar control)
		(hasRoleV rob2ContJntVelVar control)
		(hasRoleV rob2ContToolPosVar control)
		(hasRoleV rob2ContToolVelVar control)
		(hasRoleV rob2MesForceVar measured)
		(hasRoleV rob2ContHybridFPVar control)
		;variables for object
		(hasTypeV objAMesPositionVar objectPosition)
		(hasTypeV objAMesShapeVar objectShape)
		(hasTypeV objAMesStressVar objectStress)
		(hasTypeV objAMesPointCloudVar objectPointCloud)
		(hasRoleV objAMesPositionVar measured)
		(hasRoleV objAMesShapeVar measured)
		(hasRoleV objAMesStressVar measured)
		(hasRoleV objAMesPointCloudVar measured)
		;tool
		(hasTypeT grip1 simpleGripper)
		(hasTypeT grip2 simpleGripper)
		;cost
		(= (total-cost) 0)
	)
	(:goal
		(and
			(hasStateValue objA statePosition targetValue)
			(hasStateValue objA stateStress targetValue)
		)
	)
	(:metric minimize (total-cost))
)
